#!/usr/bin/env python

import subprocess
import tempfile
import csv
import numpy
import matplotlib.pyplot as plt

def read_sample(csv_file):
	points_x = []
	points_y = []
	with open(csv_file, 'r') as f:
	    reader = csv.reader(f)
	    for row in reader:
	        points_x.append(float(row[0]))
	        points_y.append(float(row[1]))
	return [points_x, points_y]

def write_sample(points_x, points_y):
	sample = tempfile.NamedTemporaryFile(mode='w+')
	with sample.file as f:
	    writer = csv.writer(f)
	    for i in range(0, len(points_x)):
	    	writer.writerow([points_x[i], points_y[i]])
	return sample

def read_cli_output(csv_file, degree):
	output = subprocess.getstatusoutput('./cli ' + csv_file + ' ' + str(degree))
	lines = output[1].splitlines()
	coefs = []
	for line in lines[1:]:
		coefs.append(float(line))
	return coefs

def generate_sample(points_x, coefs, variance):
	points_y = []
	for x in points_x:
		points_y.append(numpy.polyval(coefs, x) +
			            numpy.random.normal(scale=variance))
	return points_y

if __name__ == '__main__':
	coefs_dist = [-10, 5, 5, 0, 2]
	variance = 1
	points_x = numpy.arange(-1, 1, 0.01)
	points_y = generate_sample(points_x, coefs_dist, variance)

	csv = write_sample(points_x, points_y)
	coefs = read_cli_output(csv.name, 3)
	print(coefs)
	csv.close()

	x_0 = min(points_x)
	x_n = max(points_x)
	step = (x_n - x_0) / 50
	range = numpy.arange(x_0, x_n + step, step)

	plt.plot(points_x, points_y, 'ro')
	plt.plot(range, numpy.polyval(coefs, range), 'b-')
	plt.plot(range, numpy.polyval(coefs_dist, range), 'r-')
	plt.xlim(x_0, x_n)
	plt.show()


	# points = read_sample('sample.csv')
	# coefs = read_cli_output('sample.csv', 3)

	# x_0 = min(points[0])
	# x_n = max(points[0])
	# step = (x_n - x_0) / 50
	# range = numpy.arange(x_0, x_n + step, step)

	# plt.plot(points[0], points[1], 'ro')
	# plt.plot(range, numpy.polyval(coefs, range), 'b-')
	# plt.xlim(x_0, x_n)
	# plt.show()